@using Microsoft.AspNetCore.Identity
@using OnlineLearningPlatform.Areas.Identity.Data
@using OnlineLearningPlatform.Utility
@model IEnumerable<OnlineLearningPlatform.Models.Course>
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="container">

    <h1 class="text-success py-3 mb-3">@ViewBag.CourseType</h1>

    @{
        if (Model.Count() == 0)
        {
            <p class="fst-italic">Courses you enrolled will appear here.</p>    
        }
    }
    @{
        if (TempData["Create_Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Success!</strong> @TempData["Create_Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        if (TempData["Update_Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Success!</strong> @TempData["Update_Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        if (TempData["Delete_Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Success!</strong> @TempData["Delete_Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    }

    @{
        if ((User.IsInRole(StaticUserRoles.Role_Instructor) || User.IsInRole(StaticUserRoles.Role_Admin)) && ViewBag.CourseType != "My Learnings")
        {
            <p class="py-2">
                <a class="btn btn-success" asp-action="Create">Create New</a>
            </p>
        }
    }

    <div class="row row-cols-1 row-cols-md-4 g-4">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card" style="width: 18rem;">
                    <img src="~/Images/CourseThumbnails/@Html.DisplayFor(modelItem => item.ThumbnailPath)" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                        <b class="text-muted">@Html.DisplayFor(modelItem => item.Language), </b>
                        <b class="text-muted">@Html.DisplayFor(modelItem => item.Level)</b>
                        <p class="text-success">Rs. @Html.DisplayFor(modelItem => item.Price)</p>
                        @* <a href="#" class="btn btn-primary">Go somewhere</a> *@
                        <a class="btn btn-outline-success" asp-action="Details" asp-route-id="@item.CourseId">View Course</a>
                        @{
                            var user = await UserManager.GetUserAsync(User);
                            if ((User.IsInRole(StaticUserRoles.Role_Instructor) && item.InstructorId.Equals(user.Id)) || User.IsInRole(StaticUserRoles.Role_Admin))
                            {
                                <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.CourseId">Edit</a>
                                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.CourseId">Delete</a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>

</div>


@*
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InstructorId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Language)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Level)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ThumbnailPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InstructorId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Language)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Level)
                </td>
                <td>
                    <img src="~/Images/CourseThumbnails/@Html.DisplayFor(modelItem => item.ThumbnailPath)" style="width: 100px; height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CourseId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.CourseId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.CourseId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table> *@

